type AccessRequest = record {
  status : text;
  request_type : text;
  name : text;
  sender : principal;
  image : blob;
  project_id : text;
};
type Announcements = record {
  announcement_title : text;
  announcement_description : text;
};
type AnnouncementsInternal = record {
  user_data : opt UserInfoInternal;
  announcement_data : Announcements;
  timestamp : nat64;
  vc_info : opt VentureCapitalistInternal;
  project_info : opt ProjectInfoInternal;
  mentor_info : opt MentorInternal;
  announcement_id : text;
};
type Areas = record { id : int32; name : text };
type CanisterStatusResponse = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  query_stats : QueryStats;
  idle_cycles_burned_per_day : nat;
  module_hash : opt blob;
  reserved_cycles : nat;
};
type CanisterStatusType = variant { stopped; stopping; running };
type Cohort = record {
  cohort_end_date : text;
  title : text;
  country : text;
  tags : text;
  contact_links : opt vec SocialLinks_2;
  description : text;
  deadline : text;
  start_date : text;
  host_name : opt text;
  funding_type : text;
  criteria : Eligibility;
  cohort_banner : opt blob;
  funding_amount : text;
  no_of_seats : nat64;
  cohort_launch_date : text;
};
type CohortDetails = record {
  cohort_creator_principal : principal;
  cohort_creator_data : UserInformation;
  cohort_created_at : nat64;
  cohort_creator_role : vec text;
  cohort_id : text;
  cohort_creator : principal;
  cohort : Cohort;
};
type CohortEnrollmentRequest = record {
  rejected_at : nat64;
  request_status : text;
  enroller_principal : principal;
  cohort_details : CohortDetails;
  accepted_at : nat64;
  enroller_data : EnrollerDataInternal;
  sent_at : nat64;
};
type CohortFilterCriteria = record {
  level_on_rubric : opt float64;
  tags : opt text;
  no_of_seats_range : opt record { nat64; nat64 };
};
type CustomError = record { is_owner : bool; message : text };
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  reserved_cycles_limit : nat;
  memory_allocation : nat;
  compute_allocation : nat;
};
type Docs = record { title : text; link : text };
type Eligibility = record { level_on_rubric : float64; eligibility : opt text };
type EnrollerDataInternal = record {
  user_data : opt UserInfoInternal;
  vc_data : opt VentureCapitalistInternal;
  project_data : opt ProjectInfoInternal;
  mentor_data : opt MentorInternal;
};
type FilterCriteria = record {
  area_of_focus : opt text;
  country : opt text;
  money_raised_range : opt record { float64; float64 };
  vc_name : opt text;
  mentor_name : opt text;
  rating_range : opt record { float64; float64 };
};
type IcpHub = record { id : int32; region : text; name : text };
type IcpHubDetails = record {
  flag : opt blob;
  name : opt text;
  description : opt text;
  links : opt vec Sociallinks;
};
type InviteRequest = record {
  invite_message : text;
  cohort_id : text;
  mentor_data : MentorInternal;
  sender_principal : principal;
};
type JobType = record { id : int32; job_type : text };
type Jobs = record {
  title : text;
  link : text;
  description : text;
  category : text;
  location : text;
  job_type : text;
};
type JobsInternal = record {
  job_poster : opt UserInformation;
  job_id : text;
  timestamp : nat64;
  job_data : Jobs;
};
type LeaderboardEntryForCohorts = record {
  cohort_id : text;
  average_rating : float64;
  project_data : opt vec ProjectInfoInternal;
};
type LeaderboardEntryForRatings = record {
  average_rating : opt float64;
  project_id : opt text;
};
type ListAllIcpHubs = record {
  "principal" : principal;
  params : IcpHubDetails;
};
type ListAllProjects = record {
  overall_average : opt float64;
  params : ProjectInfoInternal;
};
type MentorFilterCriteria = record {
  country : opt text;
  area_of_expertise : opt text;
};
type MentorInternal = record {
  uid : text;
  active : bool;
  profile_completion : nat8;
  approve : bool;
  decline : bool;
  profile : MentorProfile;
};
type MentorProfile = record {
  reason_for_joining : opt text;
  existing_icp_mentor : bool;
  preferred_icp_hub : opt text;
  website : opt text;
  links : opt vec SocialLinks_2;
  multichain : opt vec text;
  area_of_expertise : vec text;
  category_of_mentoring_service : text;
  years_of_mentoring : text;
  existing_icp_project_porfolio : opt text;
  icp_hub_or_spoke : bool;
  hub_owner : opt text;
};
type MentorWithRoles = record {
  mentor_profile : MentorInternal;
  roles : vec Role;
};
type MoneyRaised = record {
  sns : text;
  investors : text;
  raised_from_other_ecosystem : text;
  target_amount : float64;
  icp_grants : text;
};
type OfferToInvestor = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { VentureCapitalist; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { ProjectInfoInternal; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type OfferToMentor = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { MentorInternal; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { ProjectInfoInternal; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type OfferToProject = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { ProjectInfoInternal; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { MentorInternal; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type OfferToProjectByInvestor = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { ProjectInfoInternal; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { VentureCapitalist; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type OfferToSendToInvestor = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { VentureCapitalist; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { ProjectInfoInternal; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type OfferToSendToMentor = record {
  request_status : text;
  offer : text;
  reciever_data : opt record { MentorInternal; UserInfoInternal };
  accepted_at : nat64;
  declined_at : nat64;
  receiever_principal : principal;
  offer_id : text;
  response : text;
  sender_data : opt record { ProjectInfoInternal; UserInfoInternal };
  sent_at : nat64;
  sender_principal : principal;
  self_declined_at : nat64;
};
type Pagination = record { page_size : nat64; page : nat64 };
type PaginationReturnCohort = record {
  data : vec CohortDetails;
  past_cohorts : vec CohortDetails;
  upoming_cohorts : vec CohortDetails;
  present_cohorts : vec CohortDetails;
  total_count : nat64;
};
type PaginationReturnMentor = record {
  data : vec record { principal; MentorWithRoles; UserInformation };
  count : nat64;
};
type PaginationReturnProjectData = record {
  data : vec record { principal; ListAllProjects; UserInformation };
  count : nat64;
};
type PaginationReturnVcData = record {
  data : vec record { principal; VcWithRoles; UserInformation };
  count : nat64;
};
type PeerRatingUpdate = record {
  ratings : vec Rating;
  cohort_id : text;
  project_id : text;
};
type ProjectInfo = record {
  project_elevator_pitch : opt text;
  dapp_link : opt text;
  reason_to_join_incubator : text;
  upload_private_documents : opt bool;
  weekly_active_users : opt nat64;
  project_description : opt text;
  vc_assigned : opt vec record { VentureCapitalist; UserInfoInternal };
  revenue : opt nat64;
  private_docs : opt vec Docs;
  token_economics : opt text;
  self_rating_of_project : float64;
  preferred_icp_hub : opt text;
  links : opt vec SocialLinks_2;
  mentors_assigned : opt vec record { MentorProfile; UserInfoInternal };
  country_of_registration : opt text;
  target_market : opt text;
  long_term_goals : opt text;
  project_area_of_focus : text;
  live_on_icp_mainnet : opt bool;
  technical_docs : opt text;
  type_of_registration : opt text;
  public_docs : opt vec Docs;
  project_cover : opt blob;
  project_website : opt text;
  promotional_video : opt text;
  money_raised_till_now : opt bool;
  supports_multichain : opt text;
  project_logo : opt blob;
  project_name : text;
  is_your_project_registered : opt bool;
  money_raised : opt MoneyRaised;
  project_team : opt vec TeamMember;
};
type ProjectInfoForUser = record {
  dapp_link : opt text;
  area_of_focus : opt text;
  weekly_active_users : opt nat64;
  project_description : opt text;
  community_rating : opt RatingAverages;
  team_member_info : opt vec TeamMember;
  date_of_joining : opt nat64;
  links : opt vec SocialLinks_2;
  country_of_project : opt text;
  project_cover : opt blob;
  project_website : opt text;
  promotional_video : opt text;
  project_logo : opt blob;
  project_name : opt text;
  project_team : opt vec TeamMember;
  live_link_of_project : opt text;
};
type ProjectInfoForUserInternal = record { params : ProjectInfoForUser };
type ProjectInfoInternal = record {
  uid : text;
  profile_completion : nat8;
  is_verified : bool;
  is_active : bool;
  params : ProjectInfo;
  creation_date : nat64;
};
type ProjectNotification = record {
  notification_type : ProjectNotificationType;
  timestamp : nat64;
};
type ProjectNotificationType = variant { AccessRequest : AccessRequest };
type ProjectPublicInfo = record {
  project_elevator_pitch : opt text;
  dapp_link : opt text;
  reason_to_join_incubator : text;
  upload_private_documents : opt bool;
  project_description : opt text;
  token_economics : opt text;
  self_rating_of_project : float64;
  preferred_icp_hub : opt text;
  links : opt vec SocialLinks_2;
  target_market : opt text;
  long_term_goals : opt text;
  project_area_of_focus : text;
  live_on_icp_mainnet : opt bool;
  technical_docs : opt text;
  public_docs : opt vec Docs;
  project_cover : opt blob;
  project_id : text;
  project_website : opt text;
  promotional_video : opt text;
  money_raised_till_now : opt bool;
  supports_multichain : opt text;
  project_logo : opt blob;
  project_name : text;
  project_team : opt vec TeamMember;
};
type ProjectPublicInfoInternal = record {
  uid : text;
  is_verified : bool;
  is_active : bool;
  params : ProjectPublicInfo;
  creation_date : nat64;
};
type ProjectRatingStruct = record {
  message : text;
  rating : nat32;
  project_id : text;
};
type ProjectReview = record {
  tag : text;
  name : text;
  message : text;
  timestamp : nat64;
  rating : nat32;
  profile_pic : blob;
};
type QueryStats = record {
  response_payload_bytes_total : nat;
  num_instructions_total : nat;
  num_calls_total : nat;
  request_payload_bytes_total : nat;
};
type Rating = record {
  sub_level : text;
  level_name : text;
  sub_level_number : float64;
  level_number : float64;
  rating : float64;
};
type RatingAverages = record {
  peer_average : vec float64;
  own_average : vec float64;
  overall_average : vec float64;
  vc_average : vec float64;
  mentor_average : vec float64;
};
type RatingMentorInvestor = record { value : float64; comment : opt text };
type RatingUpdate = record {
  ratings : vec Rating;
  current_role : text;
  project_id : text;
};
type RatingView = record {
  level_name : text;
  sub_level_name : text;
  timestamp : nat64;
  rating : nat32;
};
type Result = variant { Ok : text; Err : text };
type Result_1 = variant { Ok : MoneyRaised; Err : CustomError };
type Result_10 = variant { Ok : vec RatingView; Err : text };
type Result_11 = variant { Ok : vec Review; Err : text };
type Result_12 = variant { Ok : record { vec Review; nat64 }; Err : text };
type Result_13 = variant { Ok : vec Testimonial; Err : text };
type Result_14 = variant { Ok : UserInformation; Err : text };
type Result_15 = variant {
  Ok : vec record { VentureCapitalistInternal; UserInfoInternal };
  Err : text;
};
type Result_16 = variant { Ok; Err : text };
type Result_2 = variant { Ok : vec Docs; Err : CustomError };
type Result_3 = variant { Ok : float64; Err : text };
type Result_4 = variant { Ok : CanisterStatusResponse; Err : text };
type Result_5 = variant {
  Ok : vec record { MentorInternal; UserInfoInternal };
  Err : text;
};
type Result_6 = variant { Ok : InviteRequest; Err : text };
type Result_7 = variant { Ok : nat8; Err : text };
type Result_8 = variant {
  Ok : record { opt vec record { principal; ProjectReview }; float32; bool };
  Err : text;
};
type Result_9 = variant {
  Ok : vec record { ProjectInfoInternal; UserInfoInternal };
  Err : text;
};
type Review = record {
  tag : text;
  name : text;
  message : text;
  timestamp : nat64;
  rating : float32;
  reviewer_principal : principal;
  profile_pic : blob;
};
type Role = record {
  status : text;
  rejected_on : opt nat64;
  name : text;
  approved_on : opt nat64;
  approval_status : opt text;
  requested_on : opt nat64;
};
type SocialLinks = record { link : opt text };
type SocialLinks_1 = record { link : opt text };
type SocialLinks_2 = record { link : opt text };
type Sociallinks = record { links : opt text };
type TeamMember = record {
  member_data : UserInformation;
  member_uid : text;
  member_principal : principal;
};
type Testimonial = record {
  name : text;
  message : text;
  timestamp : nat64;
  profile_pic : blob;
};
type UserInfoInternal = record {
  uid : text;
  joining_date : nat64;
  profile_completion : nat8;
  is_active : bool;
  params : UserInformation;
};
type UserInformation = record {
  bio : opt text;
  country : text;
  profile_picture : opt blob;
  area_of_interest : text;
  type_of_profile : opt text;
  openchat_username : opt text;
  email : opt text;
  reason_to_join : opt vec text;
  full_name : text;
  social_links : opt vec SocialLinks_2;
};
type UserType = record { id : int32; role_type : text };
type VcFilterCriteria = record {
  country : opt text;
  money_invested_range : opt record { float64; float64 };
  category_of_investment : opt text;
};
type VcWithRoles = record {
  vc_profile : VentureCapitalistInternal;
  roles : vec Role;
};
type VentureCapitalist = record {
  fund_size : opt float64;
  registered_country : opt text;
  existing_icp_portfolio : opt text;
  registered_under_any_hub : opt bool;
  name_of_fund : text;
  reason_for_joining : opt text;
  average_check_size : float64;
  money_invested : opt float64;
  existing_icp_investor : bool;
  preferred_icp_hub : text;
  range_of_check_size : opt text;
  project_on_multichain : opt text;
  investor_type : opt text;
  website_link : opt text;
  links : opt vec SocialLinks_2;
  stage : opt text;
  number_of_portfolio_companies : nat16;
  assets_under_management : opt text;
  portfolio_link : text;
  category_of_investment : text;
  registered : bool;
  type_of_investment : text;
};
type VentureCapitalistAll = record {
  "principal" : principal;
  profile : VentureCapitalistInternal;
};
type VentureCapitalistInternal = record {
  uid : text;
  profile_completion : nat8;
  approve : bool;
  is_active : bool;
  decline : bool;
  params : VentureCapitalist;
};
service : {
  accept_offer_from_investor_to_project : (text, text, text) -> (text);
  accept_offer_from_mentor_to_project : (text, text, text) -> (text);
  accept_offer_from_project_to_investor : (text, text) -> (text);
  accept_offer_from_project_to_mentor : (text, text) -> (text);
  accept_rejoin_invitation : (text) -> (Result);
  access_money_details : (text) -> (Result_1) query;
  access_private_docs : (text) -> (Result_2) query;
  add_announcement : (Announcements) -> (text);
  add_data_checking : () -> (text);
  add_icp_hub_details : (IcpHubDetails) -> (text);
  add_project_rating : (ProjectRatingStruct) -> (Result);
  add_review : (principal, float32, text) -> (text);
  add_testimonial : (text) -> (text);
  apply_for_a_cohort_as_a_investor : (text) -> (text);
  apply_for_a_cohort_as_a_mentor : (text) -> (text);
  apply_for_a_cohort_as_a_project : (text) -> (text);
  approve_enrollment_request : (text, principal) -> (text);
  approve_money_access_request : (text, principal) -> (text);
  approve_private_docs_access_request : (text, principal) -> (text);
  calculate_and_store_average_rating : (text, text) -> (Result_3);
  calculate_average : (text) -> (RatingAverages) query;
  calculate_mentor_average_rating : (text) -> (Result_3) query;
  calculate_vc_average_rating : (text) -> (Result_3) query;
  create_cohort : (Cohort) -> (Result);
  decline_money_access_request : (text, principal) -> (text);
  decline_offer_from_investor_to_project : (text, text, text) -> (text);
  decline_offer_from_mentor_to_project : (text, text, text) -> (text);
  decline_offer_from_project_to_investor : (text, text) -> (text);
  decline_offer_from_project_to_mentor : (text, text) -> (text);
  decline_private_docs_access_request : (text, principal) -> (text);
  delete_announcement_by_id : (text) -> (text);
  delete_job_post_by_id : (text) -> (text);
  delete_mentor : () -> (text);
  delete_project : (text) -> (text);
  delete_team_member : (text, principal) -> (text);
  delete_venture_capitalist : () -> (text);
  filter_cohorts : (CohortFilterCriteria) -> (vec CohortDetails) query;
  filter_mentors : (MentorFilterCriteria) -> (vec MentorProfile) query;
  filter_projects : (FilterCriteria) -> (vec ProjectInfo) query;
  filter_projects_by_live_status : (bool) -> (vec ProjectInfo) query;
  filter_venture_capitalists : (VcFilterCriteria) -> (
      vec VentureCapitalist,
    ) query;
  generate_captcha_with_id : () -> (text, text);
  generate_cohort_leaderboard : () -> (vec LeaderboardEntryForCohorts) query;
  get_accepted_cohort_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_accepted_request_for_investor : (principal) -> (
      vec OfferToSendToInvestor,
    ) query;
  get_accepted_request_of_project_by_investor : (text) -> (
      vec OfferToInvestor,
    ) query;
  get_all_approved_docs_access_requests : () -> (vec ProjectNotification) query;
  get_all_cohorts : (Pagination) -> (PaginationReturnCohort) query;
  get_all_declined_docs_access_requests : () -> (vec ProjectNotification) query;
  get_all_jobs : (nat64, nat64) -> (vec JobsInternal) query;
  get_all_mentor_notification : (principal) -> (vec OfferToSendToMentor) query;
  get_all_mentors : () -> (
      vec record {
        principal;
        record { MentorInternal; UserInfoInternal; vec Role };
      },
    ) query;
  get_all_mentors_with_pagination : (Pagination) -> (
      PaginationReturnMentor,
    ) query;
  get_all_offers_which_are_pending_for_investor : (principal) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_offers_which_are_pending_for_mentor_via_mentor : (principal) -> (
      vec OfferToProject,
    ) query;
  get_all_offers_which_are_pending_for_project_from_investor : (text) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_offers_which_are_pending_for_project_from_mentor : (text) -> (
      vec OfferToProject,
    ) query;
  get_all_pending_docs_access_requests : () -> (vec ProjectNotification) query;
  get_all_project_notification : (text) -> (vec OfferToProject) query;
  get_all_project_notification_sent_by_investor : (text) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_accepted_by_project_of_investor : (text) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_accepted_for_investor : (principal) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_accepted_for_mentor_via_mentor : (principal) -> (
      vec OfferToProject,
    ) query;
  get_all_requests_which_got_accepted_for_project_from_mentor : (text) -> (
      vec OfferToProject,
    ) query;
  get_all_requests_which_got_declined_by_project_of_investor : (text) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_declined_for_investor : (principal) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_declined_for_mentor_via_mentor : (principal) -> (
      vec OfferToProject,
    ) query;
  get_all_requests_which_got_declined_for_project_from_mentor : (text) -> (
      vec OfferToProject,
    ) query;
  get_all_requests_which_got_self_declined_by_investor : (text) -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_self_declined_by_project : () -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_all_requests_which_got_self_declined_for_mentor_via_mentor : () -> (
      vec OfferToProject,
    ) query;
  get_all_requests_which_got_self_declined_for_project : (text) -> (
      vec OfferToProject,
    ) query;
  get_all_sent_request : () -> (vec OfferToMentor) query;
  get_all_sent_request_for_mentor : () -> (vec OfferToProject) query;
  get_all_sent_request_from_investor_to_project : () -> (
      vec OfferToProjectByInvestor,
    ) query;
  get_announcements : (nat64, nat64) -> (
      vec record { principal; vec AnnouncementsInternal },
    ) query;
  get_announcements_by_announcement_id : (text) -> (
      vec AnnouncementsInternal,
    ) query;
  get_announcements_by_principal : (principal) -> (
      vec AnnouncementsInternal,
    ) query;
  get_approved_money_requests : (text) -> (vec ProjectNotification) query;
  get_approved_request_from_mentor_to_project_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_approved_request_from_project_to_mentor_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_approved_role_count_for_principal : (principal) -> (nat64) query;
  get_area_focus_expertise : () -> (vec Areas) query;
  get_asset_canister : () -> (principal) query;
  get_canister_status : () -> (Result_4);
  get_cohort : (text) -> (CohortDetails) query;
  get_cohorts_by_principal : (principal) -> (vec CohortDetails) query;
  get_data_checking : () -> (text) query;
  get_declined_money_requests : (text) -> (vec ProjectNotification) query;
  get_declined_request_for_investor : (principal) -> (
      vec OfferToInvestor,
    ) query;
  get_declined_request_from_mentor_to_project_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_declined_request_from_project_to_mentor_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_declined_request_of_project_by_investor : (text) -> (
      vec OfferToInvestor,
    ) query;
  get_frequent_reviewers : () -> (vec UserInfoInternal) query;
  get_icp_hub_details : () -> (vec ListAllIcpHubs) query;
  get_icp_hubs_candid : () -> (vec IcpHub) query;
  get_investment_stage : () -> (vec text) query;
  get_job_category : () -> (vec Areas) query;
  get_job_details_using_uid : (text) -> (opt JobsInternal) query;
  get_jobs_posted_by_principal : (principal) -> (vec JobsInternal) query;
  get_latest_announcements : (nat64, nat64) -> (
      vec record { principal; vec AnnouncementsInternal },
    ) query;
  get_latest_testimonials : () -> (vec Testimonial) query;
  get_leaderboard_using_ratings : () -> (vec LeaderboardEntryForRatings) query;
  get_left_mentors_of_cohort : (text) -> (
      vec record { MentorInternal; UserInformation },
    ) query;
  get_member_id : () -> (text) query;
  get_mentor : () -> (opt record { MentorProfile; UserInfoInternal }) query;
  get_mentor_info_using_principal : (principal) -> (
      opt record { MentorInternal; UserInfoInternal },
    ) query;
  get_mentors_applied_for_cohort : (text) -> (Result_5) query;
  get_multichain_list : () -> (vec text) query;
  get_my_approved_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_my_id : () -> (principal) query;
  get_my_invitation_request : (text) -> (Result_6) query;
  get_my_pending_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_my_project : () -> (ProjectInfoInternal, UserInfoInternal) query;
  get_my_rejected_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_no_of_individuals_applied_for_cohort_using_id : (text) -> (
      Result_7,
    ) query;
  get_pending_cohort_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_pending_money_requests : (text) -> (vec ProjectNotification) query;
  get_pending_offers_for_project_received_from_investor : (text) -> (
      vec OfferToInvestor,
    ) query;
  get_pending_request_for_investor_sent_by_project : (principal) -> (
      vec OfferToInvestor,
    ) query;
  get_pending_request_from_mentor_to_project_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_pending_request_from_project_to_mentor_via_project : (principal) -> (
      vec OfferToMentor,
    ) query;
  get_project_details_for_mentor_and_investor : (text) -> (
      ProjectPublicInfoInternal,
    ) query;
  get_project_id : () -> (text) query;
  get_project_info_for_user : (text) -> (opt ProjectInfoForUserInternal) query;
  get_project_info_using_principal : (principal) -> (
      opt record { ProjectInfoInternal; UserInfoInternal },
    ) query;
  get_project_public_information_using_id : (text) -> (
      ProjectPublicInfoInternal,
    ) query;
  get_project_ratings : (text) -> (Result_8) query;
  get_project_using_id : (text) -> (opt ProjectInfoInternal) query;
  get_projects_applied_for_cohort : (text) -> (Result_9) query;
  get_projects_associated_with_investor : (principal) -> (
      vec ProjectInfoInternal,
    ) query;
  get_projects_associated_with_mentor : (principal) -> (
      vec ProjectInfoInternal,
    ) query;
  get_range_of_check_size : () -> (vec text) query;
  get_ratings_by_principal : (text) -> (Result_10) query;
  get_rejected_cohort_enrollment_requests : (principal) -> (
      vec CohortEnrollmentRequest,
    ) query;
  get_review : (principal) -> (Result_11) query;
  get_review_with_count : (principal) -> (Result_12) query;
  get_role_status : () -> (vec Role) query;
  get_roles_for_principal : (principal) -> (vec Role) query;
  get_self_declined_requests_for_investor : () -> (vec OfferToInvestor) query;
  get_self_declined_requests_for_mentor : () -> (vec OfferToMentor) query;
  get_self_declined_requests_for_project : () -> (vec OfferToMentor) query;
  get_self_declined_requests_of_project : (text) -> (vec OfferToInvestor) query;
  get_stored_average_rating : (text, text) -> (Result_3) query;
  get_testimonials : (principal) -> (Result_13) query;
  get_user_info_struct : () -> (opt UserInformation) query;
  get_user_info_using_principal : (principal) -> (opt UserInfoInternal) query;
  get_user_information : () -> (Result_14) query;
  get_user_information_using_uid : (text) -> (Result_14) query;
  get_vc_info : (principal) -> (
      opt record { VentureCapitalist; UserInfoInternal },
    ) query;
  get_vc_info_using_principal : (principal) -> (
      opt record { VentureCapitalistAll; UserInfoInternal },
    ) query;
  get_vcs_applied_for_cohort : (text) -> (Result_15) query;
  greet : (text) -> (text) query;
  list_all_projects : () -> (
      vec record { ProjectInfoInternal; UserInfoInternal },
    ) query;
  list_all_projects_with_pagination : (Pagination) -> (
      PaginationReturnProjectData,
    ) query;
  list_all_users : (Pagination) -> (
      vec record { principal; UserInformation },
    ) query;
  list_all_vcs : () -> (
      vec record {
        principal;
        record { VentureCapitalistInternal; UserInfoInternal; vec Role };
      },
    ) query;
  list_all_vcs_with_pagination : (Pagination) -> (PaginationReturnVcData) query;
  make_active_inactive_mentor : (principal) -> (text);
  make_project_active_inactive : (principal, text) -> (text);
  make_user_inactive : () -> (text);
  make_vc_active_inactive : (principal) -> (text);
  post_job : (Jobs) -> (text);
  register_mentor : (MentorProfile) -> (text);
  register_project : (ProjectInfo) -> (text);
  register_user : (text, text, UserInformation) -> (Result);
  register_venture_capitalist : (VentureCapitalist) -> (text);
  reject_enrollment_request : (principal, principal) -> (text);
  remove_mentor_from_cohort : (text, text, text) -> (Result);
  remove_project_from_cohort : (text, text, text) -> (Result);
  remove_vc_from_cohort : (text, text, text) -> (Result);
  self_decline_request_from_investor_to_project : (text) -> (text);
  self_decline_request_from_mentor_project : (text) -> (text);
  self_decline_request_from_project_to_investor : (text, text) -> (text);
  self_decline_request_from_project_to_mentor : (text) -> (text);
  send_money_access_request : (text) -> (text);
  send_offer_to_investor_by_project : (principal, text, text) -> (text);
  send_offer_to_mentor_from_project : (principal, text, text) -> (text);
  send_offer_to_project_by_investor : (text, text) -> (text);
  send_offer_to_project_by_mentor : (text, text, principal) -> (text);
  send_private_docs_access_request : (text) -> (text);
  send_rejoin_invitation_to_mentor : (text, principal, text) -> (Result);
  set_asset_canister : (principal) -> ();
  switch_role : (text, text) -> ();
  type_of_job : () -> (vec JobType) query;
  type_of_user_profile : () -> (vec UserType) query;
  update_announcement_by_id : (text, Announcements) -> (text);
  update_cohort : (text, Cohort) -> (Result);
  update_job_post_by_id : (text, Jobs) -> (text);
  update_mentor : (MentorProfile) -> (text);
  update_mentor_ratings : (text, RatingMentorInvestor) -> ();
  update_money_raised_data : (text, MoneyRaised) -> (Result);
  update_peer_rating_api : (PeerRatingUpdate) -> (text);
  update_project : (text, ProjectInfo) -> (text);
  update_project_private_docs : (text, Docs, bool) -> (Result);
  update_rating : (RatingUpdate) -> (text);
  update_team_member : (text, principal) -> (text);
  update_user_data : (principal, UserInformation) -> (Result_16);
  update_vc_ratings : (text, RatingMentorInvestor) -> ();
  update_venture_capitalist : (VentureCapitalist) -> (text);
}
